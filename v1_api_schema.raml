#%RAML 0.8
---
title: jetway.io Notification Service API
baseUri: https://api.jetway.io/bullhorn/{version}
version: v1

/applications:
    /{applicationId}:
        /key:
            post:
                description: |
                    Generate new API keys for use for the given application. Any existing API keys will be deleted
                    and cannot be recovered. The API keys can only be retrieved after generation. There is no method
                    for retrieving the keys after they are created. Make sure that keys are written down in a safe
                    place.
                responses:
                    200:
                        body:
                            application/json:
                                example: |
                                    {
                                        "key": "bb31fee30197b98c1f7cd572b29754b1",
                                        "secret": "20897a05d31d823f9b28791216a1b49dcc7f22e1"
                                     }
                    404:
                        body:
                            application/json:
                                example: |
                                    {"message": "Application guid is not registered."}
            delete:
                description: |
                    Delete an application's API keys without creating replacement sets. This will prevent any future
                    API calls from succeeding and can be used to disable an application at the API level.
                responses:
                    200:
                    404:
                        body:
                            application/json:
                                example: |
                                    {"message": "Application guid is not registered."}
        /logs:
            get:
                description: |
                    Fetches API access logs for a given application. This information should be used for debugging
                    purposes only and not used for billing or checking the status of a notification.
                queryParameters:
                    from:
                        displayName: From
                        type: number
                        description:
                        example: 1401510248
                        required: false
                    to:
                        displayName: to
                        type: number
                        description:
                        example: 1401510248
                        required: false
                    status:
                        displayName: status
                        type: string
                        description:
                        example: success
                        required: false
                responses:
                    200:
                        body:
                            application/json:
                                example: |
                                    {
                                        "logs": [
                                            {
                                                "timestamp": "",
                                                "endpoint": "",
                                                "status": "",
                                                "requestData": "...",
                                                "responseData": "..."
                                            },
                                            {
                                                "timestamp": "",
                                                "endpoint": "",
                                                "status": "",
                                                "requestData": "...",
                                                "responseData": "..."
                                            },
                                            {
                                                "timestamp": "",
                                                "endpoint": "",
                                                "status": "",
                                                "requestData": "...",
                                                "responseData": "..."
                                            }
                                        ]
                                    }
                    404:
                        body:
                            application/json:
                                example: |
                                    {"message": "Application guid is not registered."}
        /recipients:
            post:
                description: Create new recipient object.
                body:
                    application/json:
                        example: |
                            {
                               "firstName": "John",
                               "lastName": "Doe",
                               "timeZone": "-8",
                               "drains": [
                                 {
                                    "type": "sms",
                                    "for": ["password-reset", "alerts"],
                                    "addr": "12065551212"
                                 }
                               ]
                            }
                responses:
                    200:
                        body:
                            application/json:
                                example: |
                                    {"recipient": "e399c87f12a3c817349eeb76241cbb81"}
                    402:
                        body:
                            application/json:
                                example: |
                                    {"message": "You have exceeded the number of recipients for your current plan."}
                    404:
                        body:
                            application/json:
                                example: |
                                    {"message": "The application does not exist or is disabled."}
            get:
                description: |
                    Returns the number of recipients that are currently registered to a given application. This is the
                    same number that is used when determining your billing plan recipient count.
                responses:
                    200:
                        body:
                            application/json:
                                example: |
                                    {
                                       "count": 123,
                                       "recipients": [
                                          {
                                             "id": "e399c87f12a3c817349eeb76241cbb81",
                                             "lastName": "John",
                                             "firstName": "Doe",
                                             "timeZone": "-8"
                                          }
                                       ]
                                    }
                    404:
                        body:
                            application/json:
                                example: |
                                    {"message": "The application does not exist or is disabled."}
            /{recipientId}:
                get:
                    description: |
                        Retrieve the current notification settings for a registered recipient.                        
                    responses:
                        200:
                           body:
                              application/json:
                                 example: |
                                    {
                                        "firstName": "John",
                                        "lastName": "Doe",
                                        "timeZone": "-8",
                                        "drains": [
                                          {
                                             "type": "sms",
                                             "for": ["password-reset", "alerts"],
                                             "addr": "12065551212"
                                          }
                                       ]
                                    }
                        404:
                            body:
                                application/json:
                                    example: |
                                        {"message": "No recipient registered with that guid."}
                put:
                    description: |
                        Update the details about a recipient.
                    body:
                        application/json:
                            example: |
                                 {
                                     "firstName": "John",
                                     "lastName": "Doe",
                                     "timeZone": "-8",
                                     "drains": [
                                       {
                                          "type": "sms",
                                          "for": ["password-reset", "alerts"],
                                          "addr": "12065551212"
                                       }
                                    ]
                                 }
                    responses:
                        200:
                        404:
                            body:
                                application/json:
                                    example: |
                                        {"message": "No recipient registered with that guid."}
                        409: Changes since last fetch.
                delete:
                    description: |
                        Delete a registered recipient from a given application. This will prevent new notifications
                        from being sent using this recipient but all currently queued, scheduled and in progress notifications
                        will still be sent to the given recipient.
                    responses:
                        200:
        /notifications:
            post:
                description: |
                    Queue up a new notification to a select group of existing recipients. The notification may not be
                    sent before the API call returns. Instead the call will result in a unique key for the notification
                    that can be used later on to query the status of the notification.

                    The call may also fail if the new notification would exceed the your current plan. Upgrading to a higher
                    plan will correct the problem but you will need to reissue all API calls for failed notifications.
                body:
                    application/json:
                        example: |
                           {
                              "to": "",
                              "msg": "",
                              "subject": "",
                              "domain": ""
                           }
                responses:
                    202:
                        body:
                            application/json:
                                example: |
                                    {"notification": "ad6c59bfcb8943b6122c5c0cd6ae6bf5"}                        
                    402:
                        body:
                            application/json:
                                example: |
                                    {"message": "You have exceeded the number of notification you can send on your current plan."}
            /{notificationId}:
                get:
                    description: |
                        Returns the status of the requested notification. The details of the notification are not returned
                        to protect privacy of the notification.
                    responses:
                        200:
                            body:
                                application/json:
                                    example: |
                                        {
                                            "status": "queued",
                                            "created": 1401513902
                                        }
                        404:
                            body:
                                application/json:
                                    example: |
                                        {"message": "Notification does not exist."}
                delete:
                    description: |
                        Delete a scheduled or queued notification from being sent. Once a notification has entered the processing
                        state or has already been sent, it cannot be deleted.
                    responses:
                        200:
                        405:
                            body:
                                application/json:
                                    example: |
                                        {"message": "Notification has started processing and can no longer be deleted."}
