#%RAML 0.8
---
title: jetway.io Notification Service API
baseUri: https://api.jetway.io/bullhorn/{version}
version: v1.0


###############################################################################
### Template Methods
###############################################################################
/templates:
    post:
        description: |
            Creates a new template object with blank content. Until the template
            is uploaded, the template cannot be used in generating a notification.
        body:
            application/json:
                example: |
                    {
                        "domain": "996bdce2-1b64-11e4-8e1a-f96d655efa6e",
                        "type": "sms",
                        "name": "password-reset"
                    }
        response:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "templateId": "ff025b23-7d18-47fb-be3f-37dcc0bf888d"
                            }
    /{templateId}:        
        post:
            description: |
                Update the template content using the body of the request. The body
                is handled based upon the "type" field specified when the template
                was created. Every template supports the Handlebars substitution
                pattern. This version of the API doesn't current support any of the
                flow control helpers that Handlebars defined.
            response:
                200:
                400:
                    body:
                        application/json:
                            example: |
                                {
                                    "error": "Template contains unsupported substitution variable - ssubject"
                                }
        get:
            description: Returns the template as it was compiled.


###############################################################################
### Profile Object Entity Methods
###############################################################################
/profiles:
    post:
        description: Create a new Profile entity object in Jetway.
        body:
            application/json:
                example: |
                    {
                        "domain": "996bdce2-1b64-11e4-8e1a-f96d655efa6e",
                        "firstName": "Jane",
                        "lastName": "Doe",
                        "subscriptions": {
                            "newsletter": {
                                "email": "jdoe@gmail.com",
                                "sms": "12065551212"
                            },
                            "password-reset": {
                                "sms": "12065551212"
                            }
                        }
                    }
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "profileId": "996bdce0-1b64-11e4-8e1a-f96d655efa6e"
                            }
            400:
                body:
                    application/json:
                        example: |
                            {"error": "Required field, domain, is missing."}
    /{profileId}:
        get:
            description: Fetches details about the a given Profile.
            responses:
                200:
                    body:
                        application/json:
                            example: |
                                {
                                    "domain": "996bdce2-1b64-11e4-8e1a-f96d655efa6e",
                                    "firstName": "Jane",
                                    "lastName": "Doe",
                                    "subscriptions": {
                                        "newsletter": {
                                            "email": "jdoe@gmail.com",
                                            "sms": "12065551212"
                                        },
                                        "password-reset": {
                                            "sms": "12065551212"
                                        }
                                    }
                                }
                400:
                    body:
                        application/json:
                            example: |
                                {"error": "Required field, domain, is missing."}
                404:
                    description: There is no Profile object associated with the profileId.
        put:
            description: Saves a Profile object with an existing profileId.
            body:
                application/json:
                    example: |
                        {
                            "domain": "996bdce2-1b64-11e4-8e1a-f96d655efa6e",
                            "firstName": "Jane",
                            "lastName": "Doe",
                            "subscriptions": {
                                "newsletter": {
                                    "email": "jdoe@gmail.com",
                                    "sms": "12065551212"
                                },
                                "password-reset": {
                                    "sms": "12065551212"
                                }
                            }
                        }
            responses:
                200:
                    description: The save was successful.
                400:
                    body:
                        application/json:
                            example: |
                                {"error": "Required field, domain, is missing."}
        delete:
            description: |
                Remove a Profile object from Jetway. This operation cannot be undone. Any pending 
            responses:
                200:


###############################################################################
### Notification Object Entity Methods
###############################################################################
/notifications:
    post:
        description: |
            Queue up a new notification to a select group of existing recipients. The notification may not be
            sent before the API call returns. Instead the call will result in a unique key for the notification
            that can be used later on to query the status of the notification.

            The call may also fail if the new notification would exceed the your current plan. Upgrading to a higher
            plan will correct the problem but you will need to reissue all API calls for failed notifications.
        body:
            application/json:
                example: |
                   {
                      "to": "",
                      "msg": "",
                      "subject": "",
                      "domain": ""
                   }
        responses:
            202:
                body:
                    application/json:
                        example: |
                            {"notification": "ad6c59bfcb8943b6122c5c0cd6ae6bf5"}
            400:
                body:
                    application/json:
                        example: |
                            {"error": "Domain is not defined."}
            402:
                body:
                    application/json:
                        example: |
                            {"message": "You have exceeded the number of notification you can send on your current plan."}
    /{notificationId}:
        get:
            description: |
                Returns the status of the requested notification. The details of the notification are not returned
                to protect privacy of the notification.
            responses:
                200:
                    body:
                        application/json:
                            example: |
                                {
                                    "status": "queued",
                                    "created": 1401513902
                                }
                404:
                    body:
                        application/json:
                            example: |
                                {"message": "Notification does not exist."}